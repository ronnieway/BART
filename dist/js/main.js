'use strict';(function(c,$){'use strict';var f=0,g=$('head'),l=c.BigText,o=$.fn.bigtext,p={DEBUG_MODE:!1,DEFAULT_MIN_FONT_SIZE_PX:null,DEFAULT_MAX_FONT_SIZE_PX:528,GLOBAL_STYLE_ID:'bigtext-style',STYLE_ID:'bigtext-id',LINE_CLASS_PREFIX:'bigtext-line',EXEMPT_CLASS:'bigtext-exempt',noConflict:q=>{if(q){$.fn.bigtext=o;c.BigText=l}return p},test:{wholeNumberFontSizeOnly:()=>{if(!('getComputedStyle'in c)||document.body==null){return!0}var q=$('<div/>').css({position:'absolute','font-size':'14.1px'}).appendTo(document.body).get(0),r=c.getComputedStyle(q,null);if(r){return r.getPropertyValue('font-size')==='14px'}return!0}},supports:{wholeNumberFontSizeOnly:void 0},init:()=>{if(p.supports.wholeNumberFontSizeOnly===void 0){p.supports.wholeNumberFontSizeOnly=p.test.wholeNumberFontSizeOnly()}if(!$('#'+p.GLOBAL_STYLE_ID).length){g.append(p.generateStyleTag(p.GLOBAL_STYLE_ID,['.bigtext * { white-space: nowrap; } .bigtext > * { display: block; }','.bigtext .'+p.EXEMPT_CLASS+', .bigtext .'+p.EXEMPT_CLASS+' * { white-space: normal; }']))}},bindResize:(q,r)=>{if($.throttle){$(c).unbind(q).bind(q,$.throttle(100,r))}else{if($.fn.smartresize){q='smartresize.'+q}$(c).unbind(q).bind(q,r)}},getStyleId:id=>p.STYLE_ID+'-'+id,generateStyleTag:(id,css)=>$('<style>'+css.join('\n')+'</style>').attr('id',id),clearCss:q=>{var r=p.getStyleId(q);$('#'+r).remove()},generateCss:(q,r,s,t)=>{var u=[];p.clearCss(q);for(var j=0,k=r.length;j<k;j++){u.push('#'+q+' .'+p.LINE_CLASS_PREFIX+j+' {'+(t[j]?' white-space: normal;':'')+(r[j]?' font-size: '+r[j]+'px;':'')+(s[j]?' word-spacing: '+s[j]+'px;':'')+'}')}return p.generateStyleTag(p.getStyleId(q),u)},jQueryMethod:function q(r){p.init();r=$.extend({minfontsize:p.DEFAULT_MIN_FONT_SIZE_PX,maxfontsize:p.DEFAULT_MAX_FONT_SIZE_PX,childSelector:'',resize:!0},r||{});this.each(function(){var s=$(this).addClass('bigtext'),t=s.width(),u=s.attr('id'),v=r.childSelector?s.find(r.childSelector):s.children();if(!u){u='bigtext-id'+f++;s.attr('id',u)}if(r.resize){p.bindResize('resize.bigtext-event-'+u,()=>{p.jQueryMethod.call($('#'+u),r)})}p.clearCss(u);v.addClass((lineNumber,className)=>[className.replace(new RegExp('\\b'+p.LINE_CLASS_PREFIX+'\\d+\\b'),''),p.LINE_CLASS_PREFIX+lineNumber].join(' '));var w=e(s,v,t,r.maxfontsize,r.minfontsize);g.append(p.generateCss(u,w.fontSizes,w.wordSpacings,w.minFontSizes))});return this.trigger('bigtext:complete')}};function d(q,r,s,t,u,v,w){var y;w=typeof w=='number'?w:0;q.css(s,t+v);y=q.width();if(y>=r){q.css(s,'');if(y===r){return{match:'exact',size:parseFloat((parseFloat(t)-0.1).toFixed(3))}}var z=r-w,A=y-r;return{match:'estimate',size:parseFloat((parseFloat(t)-(s==='word-spacing'&&w&&A<z?0:u)).toFixed(3))}}return y}function e(q,r,s,t,u){var v=q.clone(!0).addClass('bigtext-cloned').css({fontFamily:q.css('font-family'),textTransform:q.css('text-transform'),wordSpacing:q.css('word-spacing'),letterSpacing:q.css('letter-spacing'),position:'absolute',left:p.DEBUG_MODE?0:-9999,top:p.DEBUG_MODE?0:-9999}).appendTo(document.body),w=[],y=[],z=[],A=[];r.css('float','left').each(function(){var B=$(this),C=p.supports.wholeNumberFontSizeOnly?[8,4,1]:[8,4,1,0.1],D,E;if(B.hasClass(p.EXEMPT_CLASS)){w.push(null);A.push(null);z.push(!1);return}var F=32,G=parseFloat(B.css('font-size')),H=(B.width()/G).toFixed(6);E=parseInt(s/H,10)-F;outer:for(var m=0,n=C.length;m<n;m++){inner:for(var j=1,k=10;j<=k;j++){if(E+j*C[m]>t){E=t;break outer}D=d(B,s,'font-size',E+j*C[m],C[m],'px',D);if(typeof D!='number'){E=D.size;if(D.match==='exact'){break outer}break inner}}}A.push(s/E);if(E>t){w.push(t);z.push(!1)}else if(!!u&&E<u){w.push(u);z.push(!0)}else{w.push(E);z.push(!1)}}).each(function(B){var C=$(this),D=0,E=1,F;if(C.hasClass(p.EXEMPT_CLASS)){y.push(null);return}C.css('font-size',w[B]+'px');for(var m=1,n=3;m<n;m+=E){F=d(C,s,'word-spacing',m,E,'px',F);if(typeof F!='number'){D=F.size;break}}C.css('font-size','');y.push(D)}).removeAttr('style');if(!p.DEBUG_MODE){v.remove()}else{v.css({'background-color':'rgba(255,255,255,.4)'})}return{fontSizes:w,wordSpacings:y,ratios:A,minFontSizes:z}}$.fn.bigtext=p.jQueryMethod;c.BigText=p})(void 0,jQuery);$('#bigtext').bigtext();if('serviceWorker'in navigator){navigator.serviceWorker.register('/swGetData.js').then(c=>{console.log('ServiceWorker registration',c)}).catch(c=>{throw new Error('ServiceWorker error: '+c)})}function loadData(){var d='http://api.bart.gov/api/stn.aspx?cmd=stns&key=MW9S-E7SL-26DU-VV8V';$.ajax({type:'GET',url:d,dataType:'xml',success:c,error:()=>{$('#routes-at-station-header').css('color','red').html('You are offline!');$('#routes-at-station-values').css('color','red').html('You can\'t get the actual information regarding your trip, but you still have a chance to chek the offline schedule for the chosen station')}});function c(e){$('#stations-list').html('');$(e).find('station').each(function(){$('#stations-list').append('<option value=\''+$(this).find('name').text()+'\' data-value=\''+$(this).find('abbr').text()+'\'></option>');$('#stations-list2').append('<option value=\''+$(this).find('name').text()+'\' data-value=\''+$(this).find('abbr').text()+'\'></option>')})}return!1}function chooseStation(){var d=$('#stations-input').val(),e=$('#stations-list option[value=\''+d+'\']').attr('data-value'),f='http://api.bart.gov/api/stn.aspx?cmd=stninfo&key=MW9S-E7SL-26DU-VV8V&orig='+e;$.ajax({type:'GET',url:f,dataType:'xml',success:data=>data,complete:c,error:()=>{$('#routes-at-station-header').css('color','red').html('You are offline!');$('#routes-at-station-values').css('color','red').html('You can\'t get the actual information regarding your trip, but you still have a chance to chek the offline schedule for the chosen station');$('#all-schedule-content').html('')}});function c(g){$('#form-container2').css('display','block');$('#routes-at-station-values').html('');$('#routes-at-station-header').html('<p>Choose route</p>');$('#stations-input2').val('');$('#all-schedule-content').html('');$('#sched-results').html('');var a=$(g.responseText).find('station').find('north_routes').find('route').text(),b=$(g.responseText).find('station').find('south_routes').find('route').text();a=a.replace(/\s/g,'');b=b.replace(/\s/g,'');var l=a.split('ROUTE').slice(2),o=b.split('ROUTE').slice(2);$('#routes-at-station-header').html('Routes at the station:').css('color','white');for(var i=0;i<l.length;i++){$('#routes-at-station-values').append('<div class=\'col-xs-6 col-sm-6 col-md-5 col-lg-5\' id=\'route'+l[i]+'\'><b><a onclick=\'chooseRoute('+l[i]+');\'>Route '+l[i]+'</a></b></div>')}for(var j=0;j<o.length;j++){$('#routes-at-station-values').append('<div class=\'col-xs-6 col-sm-6 col-md-5 col-lg-5\' id=\'route'+o[j]+'\'><b><a onclick=\'chooseRoute('+o[j]+');\'>Route '+o[j]+'</a></b></div>')}}$.ajax({type:'GET',url:'http://api.bart.gov/api/sched.aspx?cmd=stnsched&key=MW9S-E7SL-26DU-VV8V&l=1&orig='+e,dataType:'xml',success:$('#all-schedule-link').html('<button type=\'button\' class=\'btn btn-primary btn-lg btn-block\' id=\'offline-sched\'>Offline schedule for '+d+'</button>'),error:()=>{$('#form-container2').css('display','none');$('#routes-at-station-header').css('color','red').html('You are offline!');$('#routes-at-station-values').css('color','red').html('You can\'t get the actual information regarding your trip, but you still have a chance to chek the offline schedule for the chosen station');$('#all-schedule-content').html('')}});return!1}function chooseRoute(x){var d='http://api.bart.gov/api/route.aspx?cmd=routeinfo&key=MW9S-E7SL-26DU-VV8V&route='+x;$.ajax({type:'GET',url:d,dataType:'xml',success:c,error:()=>{$('#form-container2').css('display','none');$('#routes-at-station-header').css('color','red').html('You are offline!');$('#routes-at-station-values').css('color','red').html('You can\'t get the actual information regarding your trip, but you still have a chance to chek the offline schedule for the chosen station');$('#all-schedule-content').html('')}});function c(e){$('#routes-at-station-header').html('<p>Select the destination at the chosen route</p>').css('color','white');var b='#route'+x,a=$(e).find('station').text();a=a.match(/.{4}/g);$('#all-schedule-content').html('');var f=$('#stations-input').val();for(var i=0;i<a.length;i++){var g='finalDestination(\''+a[i]+'\')';if($('#stations-list option[data-value=\''+a[i]+'\']').attr('value')!=void 0){if(a[i]==$('#stations-list option[value=\''+f+'\']').attr('data-value')){$(b).append('<p class=\'you-are-here\'> You are here: '+$('#stations-list option[data-value=\''+a[i]+'\']').attr('value')+'</p>')}else{$(b).append('<p><a onclick='+g+';>'+$('#stations-list option[data-value=\''+a[i]+'\']').attr('value')+'</a></p>')}}}}return!1}function finalDestination(c){var e=$('#stations-input').val(),f=$('#stations-list option[value=\''+e+'\']').attr('data-value'),g='http://api.bart.gov/api/sched.aspx?cmd=arrive&date=now&key=MW9S-E7SL-26DU-VV8V&b=0&a=3&orig='+f+'&dest='+c;$.ajax({type:'GET',url:g,dataType:'xml',success:d,error:()=>{$('#form-container2').css('display','none');$('#routes-at-station-header').css('color','red').html('You are offline!');$('#routes-at-station-values').css('color','red').html('You can\'t get the actual information regarding your trip, but you still have a chance to chek the offline schedule for the chosen station');$('#all-schedule-content').html('')}});function d(l){$('#sched-results').html('');$('#all-schedule-content').html('');$('#routes-at-station-values').html('');$('#routes-at-station-header').html('');$('#sched-results').append('<h4 class=\'suggestedTime\'>You can pick one of the following trains to '+$('#stations-list option[data-value=\''+c+'\']').attr('value')+'</h4>');$(l).find('trip').each(function(){var o=this.children[1].outerHTML.split('origTimeMin='),p=o[1].slice(1,9),q=this.children[1].outerHTML.split('destTimeMin='),r=q[1].slice(1,9);if(p[7]=='"'){p=p.slice(0,-1)}if(r[7]=='"'){r=r.slice(0,-1)}$('#sched-results').append('<p class=\'suggestedTime\'>Departure: '+p+', arrival: '+r+'</p>')})}return!1}function finalDestination2(){var d=$('#stations-input').val(),e=$('#stations-list option[value=\''+d+'\']').attr('data-value'),f=$('#stations-input2').val(),g=$('#stations-list2 option[value=\''+f+'\']').attr('data-value'),l='http://api.bart.gov/api/sched.aspx?cmd=arrive&date=now&key=MW9S-E7SL-26DU-VV8V&b=0&a=3&orig='+e+'&dest='+g;$.ajax({type:'GET',url:l,dataType:'xml',success:c,error:()=>{$('#form-container2').css('display','none');$('#routes-at-station-header').css('color','red').html('You are offline!');$('#routes-at-station-values').css('color','red').html('You can\'t get the actual information regarding your trip, but you still have a chance to chek the offline schedule for the chosen station');$('#all-schedule-content').html('')}});function c(o){var p=$('#stations-input2').val();$('#sched-results').html('');$('#all-schedule-content').html('');$('#routes-at-station-values').html('');$('#routes-at-station-header').html('');$('#sched-results').append('<div class=\'suggestedTime col-xs-12 col-sm-12 col-md-12 col-lg-12\'><h4 class=\'suggestedTime\'>You can pick one of the following trains to '+p+'</h4></div>');$(o).find('trip').each(function(){var q=this.children[1].outerHTML.split('origTimeMin='),r=q[1].slice(1,9),s=this.children[1].outerHTML.split('destTimeMin='),t=s[1].slice(1,9);if(r[7]=='"'){r=r.slice(0,-1)}if(t[7]=='"'){t=t.slice(0,-1)}$('#sched-results').append('<div class=\'suggestedTime col-xs-12 col-sm-12 col-md-12 col-lg-12\'>Departure: '+r+', arrival: '+t+'</div>')})}return!1}function showSchedule(){var d=$('#stations-input').val(),e=$('#stations-list option[value=\''+d+'\']').attr('data-value'),f=$('#stations-list option[value=\''+d+'\']').attr('value');$.ajax({type:'GET',url:'http://api.bart.gov/api/sched.aspx?cmd=stnsched&key=MW9S-E7SL-26DU-VV8V&l=1&orig='+e,dataType:'xml',success:c,error:()=>{$('#form-container2').css('display','none');$('#routes-at-station-header').css('color','red').html('You are offline!');$('#routes-at-station-values').css('color','red').html('You can\'t get the actual information regarding your trip, but you still have a chance to chek the offline schedule for the chosen station');$('#all-schedule-content').html('');$('#all-schedule-content').append('<h4 class=\'text-center\'>Sorry, schedule wasn\'t loaded. Here is routes map.</h4>').css('color','red');$('#all-schedule-content').append('<img id=\'the-routes-map\' src=\'img/map.gif\'>')}});function c(g){$('#routes-at-station-header').html('');$('#routes-at-station-values').html('');$('#all-schedule-content').html('');$('#sched-results').html('');var l=$('#stations-input').val(),o=$('#stations-list option[value=\''+l+'\']').attr('data-value');$('#all-schedule-link').html('<button type=\'button\' class=\'btn btn-primary btn-lg btn-block\' id=\'offline-sched\'>Offline schedule for '+f+'</button>');var p=g.children[0].innerHTML;p=p.split('<item line=').slice(1);var q='<table class=\'table table-hover table-responsive table-striped\' id=\'sched-table\'><thead class=\'center\'><tr class=\'row\'><th class=\'col-xs-3 col-sm-3 col-md-3 col-lg-3\'>Route</th><th class=\'col-xs-3 col-sm-3 col-md-3 col-lg-3\'>Destination</th><th class=\'col-xs-3 col-sm-3 col-md-3 col-lg-3\'>Departure time</th><th class=\'col-xs-3 col-sm-3 col-md-3 col-lg-3\'>Arrival time</th></tr></thead><tbody>';for(var h=0;h<p.length;h++){var r=p[h].slice(7,9);if(r[1]=='"'){r=r.slice(0,-1)}var s=p[h].split('trainHeadStation='),t=s[1].slice(1,5),u=$('#stations-list option[data-value=\''+t+'\']').attr('value'),v=p[h].split('origTime='),w=v[1].slice(1,9);if(w[7]=='"'){w=w.slice(0,-1)}var y=p[h].split('destTime='),z=y[1].slice(1,9);if(z[7]=='"'){z=z.slice(0,-1)}q=q+'<tr class=\'row\'><td class=\'col-xs-3 col-sm-3 col-md-3 col-lg-3\'>'+r+'</td><td class=\'col-xs-3 col-sm-3 col-md-3 col-lg-3\'>'+u+'</td><td class=\'col-xs-3 col-sm-3 col-md-3 col-lg-3\'>'+w+'</td><td class=\'col-xs-3 col-sm-3 col-md-3 col-lg-3\'>'+z+'</td></tr>'}q=q+'</tbody></table>';$('#all-schedule-content').append(q)}}$('#form-container').submit(chooseStation);$('#form-container2').submit(finalDestination2);$('#all-schedule-link').click(showSchedule);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
